{% set version = "0.1.0" %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-ahocorasicktrie
  version: {{ version|replace("-", "_") }}

source:
  fn: AhoCorasickTrie_{{ version }}.tar.gz
  url:
    - {{ cran_mirror }}/src/contrib/AhoCorasickTrie_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/AhoCorasickTrie/AhoCorasickTrie_{{ version }}.tar.gz
  sha256: 2803c4925a96b6bee59c3c843ca792c61d5e811b4994175ed2712bedba67544c

build:
  merge_build_host: true  # [win]
  number: 1004
  skip: true  # [win32]
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}        # [not win]
    - {{ compiler('cxx') }}      # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('m2w64_cxx') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]
  host:
    - r-base
    - r-rcpp >=0.12.5
  run:
    - r-base
    - {{ native }}gcc-libs         # [win]
    - r-rcpp >=0.12.5

test:
  commands:
    - $R -e "library('AhoCorasickTrie')"           # [not win]
    - "\"%R%\" -e \"library('AhoCorasickTrie')\""  # [win]

about:
  home: https://github.com/chambm/AhoCorasickTrie
  license: Apache-2.0
  summary: Aho-Corasick is an optimal algorithm for finding many keywords in a text. It can locate all matches in a text in O(N+M) time; i.e., the time needed scales linearly with the number of keywords (N) and the size of the text (M). Compare this to the naive approach which takes O(N*M) time to loop through each pattern
    and scan for it in the text. This implementation builds the trie (the generic name of the data structure) and runs the search in a single function call. If you want to search multiple texts with the same trie, the function will take a list or vector of texts and return a list of matches to each text. By default, all
    128 ASCII characters are allowed in both the keywords and the text. A more efficient trie is possible if the alphabet size can be reduced. For example, DNA sequences use at most 19 distinct characters and usually only 4; protein sequences use at most 26 distinct characters and usually only 20. UTF-8 (Unicode) matching
    is not currently supported.
  license_family: APACHE
  license_file: LICENSE-2.0.txt

extra:
  recipe-maintainers:
    - conda-forge/r
    - johanneskoester
    - bgruening
    - daler
    - jdblischak
    - cbrueffer
    - dbast
